{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authService = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  }\n};\nexport const tripService = {\n  getAllTrips: async (filters = {}) => {\n    const response = await api.get('/trips', {\n      params: filters\n    });\n    return response.data;\n  },\n  getTrip: async id => {\n    const response = await api.get(`/trips/${id}`);\n    return response.data;\n  },\n  createTrip: async tripData => {\n    const formData = new FormData();\n    Object.keys(tripData).forEach(key => {\n      if (key === 'photos') {\n        tripData[key].forEach(photo => {\n          formData.append('photos', photo);\n        });\n      } else {\n        formData.append(key, tripData[key]);\n      }\n    });\n    const response = await api.post('/trips', formData);\n    return response.data;\n  },\n  updateTrip: async (id, tripData) => {\n    const formData = new FormData();\n    Object.keys(tripData).forEach(key => {\n      if (key === 'photos' && Array.isArray(tripData[key])) {\n        tripData[key].forEach(photo => {\n          if (photo instanceof File) {\n            formData.append('photos', photo);\n          }\n        });\n      } else {\n        formData.append(key, tripData[key]);\n      }\n    });\n    const response = await api.put(`/trips/${id}`, formData);\n    return response.data;\n  },\n  deleteTrip: async id => {\n    const response = await api.delete(`/trips/${id}`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authService","login","email","password","response","post","data","register","userData","tripService","getAllTrips","filters","get","params","getTrip","id","createTrip","tripData","formData","FormData","Object","keys","forEach","key","photo","append","updateTrip","Array","isArray","File","put","deleteTrip","delete"],"sources":["C:/Users/Induru Adeesha/projects/projects/99x demo ins/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    return response.data;\r\n  },\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const tripService = {\r\n  getAllTrips: async (filters = {}) => {\r\n    const response = await api.get('/trips', { params: filters });\r\n    return response.data;\r\n  },\r\n  getTrip: async (id) => {\r\n    const response = await api.get(`/trips/${id}`);\r\n    return response.data;\r\n  },\r\n  createTrip: async (tripData) => {\r\n    const formData = new FormData();\r\n    Object.keys(tripData).forEach(key => {\r\n      if (key === 'photos') {\r\n        tripData[key].forEach(photo => {\r\n          formData.append('photos', photo);\r\n        });\r\n      } else {\r\n        formData.append(key, tripData[key]);\r\n      }\r\n    });\r\n    const response = await api.post('/trips', formData);\r\n    return response.data;\r\n  },\r\n  updateTrip: async (id, tripData) => {\r\n    const formData = new FormData();\r\n    Object.keys(tripData).forEach(key => {\r\n      if (key === 'photos' && Array.isArray(tripData[key])) {\r\n        tripData[key].forEach(photo => {\r\n          if (photo instanceof File) {\r\n            formData.append('photos', photo);\r\n          }\r\n        });\r\n      } else {\r\n        formData.append(key, tripData[key]);\r\n      }\r\n    });\r\n    const response = await api.put(`/trips/${id}`, formData);\r\n    return response.data;\r\n  },\r\n  deleteTrip: async (id) => {\r\n    const response = await api.delete(`/trips/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;AAEFI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMJ,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC3D,OAAOJ,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACnC,MAAMP,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,GAAG,CAAC,QAAQ,EAAE;MAAEC,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC7D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDQ,OAAO,EAAE,MAAOC,EAAE,IAAK;IACrB,MAAMX,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;IAC9C,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDU,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACnC,IAAIA,GAAG,KAAK,QAAQ,EAAE;QACpBN,QAAQ,CAACM,GAAG,CAAC,CAACD,OAAO,CAACE,KAAK,IAAI;UAC7BN,QAAQ,CAACO,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC;QAClC,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,QAAQ,CAACO,MAAM,CAACF,GAAG,EAAEN,QAAQ,CAACM,GAAG,CAAC,CAAC;MACrC;IACF,CAAC,CAAC;IACF,MAAMnB,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAEa,QAAQ,CAAC;IACnD,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDoB,UAAU,EAAE,MAAAA,CAAOX,EAAE,EAAEE,QAAQ,KAAK;IAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACnC,IAAIA,GAAG,KAAK,QAAQ,IAAII,KAAK,CAACC,OAAO,CAACX,QAAQ,CAACM,GAAG,CAAC,CAAC,EAAE;QACpDN,QAAQ,CAACM,GAAG,CAAC,CAACD,OAAO,CAACE,KAAK,IAAI;UAC7B,IAAIA,KAAK,YAAYK,IAAI,EAAE;YACzBX,QAAQ,CAACO,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC;UAClC;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,QAAQ,CAACO,MAAM,CAACF,GAAG,EAAEN,QAAQ,CAACM,GAAG,CAAC,CAAC;MACrC;IACF,CAAC,CAAC;IACF,MAAMnB,QAAQ,GAAG,MAAMhB,GAAG,CAAC0C,GAAG,CAAC,UAAUf,EAAE,EAAE,EAAEG,QAAQ,CAAC;IACxD,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EACDyB,UAAU,EAAE,MAAOhB,EAAE,IAAK;IACxB,MAAMX,QAAQ,GAAG,MAAMhB,GAAG,CAAC4C,MAAM,CAAC,UAAUjB,EAAE,EAAE,CAAC;IACjD,OAAOX,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}